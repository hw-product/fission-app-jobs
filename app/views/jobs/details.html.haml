:ruby
  state = case @job.status
    when :success, :complete
      'success'
    when :error
      'danger'
    else
      'warn'
    end

  status = "<div class='text-#{state}'>#{@job.status.to_s.humanize}</div>".html_safe
  table_data =  [['Timestamp', @job.created_at.strftime('%Y/%m/%d %H:%M:%S %Z')],
                 ['Account', @job.account.name],
                 ['Status', status],
                 ['Completed', "#{@job.percent_complete}%"]]

- content_for(:panel_header) do
  - job_type = request.path.split('/')[1].capitalize
  %h3= "#{job_type} Job: #{@job.message_id}"

- content_for(:panel_content) do
  = render(:partial => 'layouts/table',    |
           :locals => { :header_data => ['', ''], :data => table_data})
  - if @logs && !@logs.empty?
    %fieldset
      %legend
        Logs
      %ul.list-group
        - @logs.each do |name, value|
          - if Rails.env.to_s == 'development'
            %li.list-group-item.log{'data-text' => value, :style => 'cursor: pointer'}
              %span.glyphicon.glyphicon-open-file
              = name
          - else
            %li.list-group-item.log{'data-url' => value, :style => 'cursor: pointer'}
              %span.glyphicon.glyphicon-open-file
              = name

  - if content_for?(:panel_body)
    = content_for(:panel_body)
  - else
    %div.panel.panel-default
      %div.panel-heading
        %h4.panel-title
          %a.accordion-toggle{'data-toggle' => 'collapse', :href => '#payload-display'}
            Payload
      %div.panel-collapse.collapse#payload-display
        %div.panel-body
          %pre#job-payload~ JSON.pretty_generate(@job.payload.fetch(:data, {}).to_hash)


- content_for(:container) do
  = render(:partial => 'layouts/panel',                      |
           :locals => {                                      |
             :heading => content_for(:panel_header),         |
             :panel_class => "panel-#{state}",               |
             :panel_content => content_for(:panel_content) })

= render(:partial => 'layouts/container',                            |
         :locals => { :container_content => content_for(:container), |
                      :container_id => 'fission-job' })

:javascript
  $(document).ready(
    function(){
      $('.log').click(function(){
        if($(this).attr('data-url')){
          window_rails.create_window({
            name: 'log',
            title: 'Log file: ' + $(this).text(),
            size: 'large',
            content: '<div id="log-position">Loading...</div>'
          });
          $.ajax({
            url: $(this).attr('data-url'),
            type: 'GET'
          }).error(function(data, status){
            $('#log-position').html('<b>ERROR:</b> ' + data.responseText);
          }).success(function(data){
            $('#log-position').html('<pre>' + data + '</pre>');
          });
        }
        else {
          window_rails.create_window({
            name: 'log',
            title: 'Log file: ' + $(this).text(),
            size: 'large',
            content: $(this).attr('data-text')
          });
        }
        window_rails.open_window('log', {});
      });
    }
  );
